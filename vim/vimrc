set nocompatible              " be iMproved, required
filetype off                  " required

let mapleader = ' ' " Remap leader key

" Project switcher
set rtp+=~/.local/share/nvim/plugged/vim-project/
"set rtp+=~/.vim/bundle/vim-project

call plug#begin('~/.local/share/nvim/plugged')
  " alternatively, pass a path where Vundle should install plugins
  "call vundle#begin('~/some/path/here')

  Plug 'VundleVim/Vundle.vim' " let Vundle manage Vundle, required

  Plug 'tpope/vim-fugitive'
  " The sparkup vim script is in a subdirectory of this repo called vim.
  " Pass the path to set the runtimepath properly.
  Plug 'rstacruz/sparkup', {'rtp': 'vim/'}

  Plug 'amiorin/vim-project' " Projects path switcher

  " Linters and stuff
  Plug 'ntpeters/vim-better-whitespace' " Show trailing whitespace and spaces before a tab:
  Plug 'sheerun/vim-polyglot' " Enable syntax color
  Plug 'elixir-editors/vim-elixir' " Elixir
  Plug 'scrooloose/nerdcommenter' " Comments
  "Plug 'w0rp/ale' " Lint and fixers
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'prettier/vim-prettier', { 'do': 'npm install' }

  " Status tab
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'enricobacis/vim-airline-clock'

  " Markdown
  Plug 'godlygeek/tabular'
  Plug 'plasticboy/vim-markdown'
  Plug 'junegunn/vim-easy-align'
  Plug 'JamshedVesuna/vim-markdown-preview'
  Plug 'mzlogin/vim-markdown-toc' " auto toc
  Plug 'terryma/vim-multiple-cursors'

  " Various
  Plug 'romainl/vim-cool' " Remove highlight when move the cursor after a search
  Plug 'rizzatti/dash.vim' " Dash integration
  Plug 'mhinz/vim-startify' " Startup buffer
  Plug 'airblade/vim-rooter' " Change to project root directory automatically
  Plug 'lfv89/vim-interestingwords' " Highlight multiple words

  " Substitution
  Plug 'nishigori/increment-activator' " replace boolean values

  " fzf
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'

  " NERDTree
  Plug 'scrooloose/nerdtree'
  Plug 'ryanoasis/vim-devicons'
  Plug 'tiagofumo/vim-nerdtree-syntax-highlight' " colors
  Plug 'mortonfox/nerdtree-clip' " copy file path from nerdtree

  Plug 'easymotion/vim-easymotion' " Quick navigation
  Plug 'tpope/vim-vinegar' " Filetree
  Plug 'gcmt/taboo.vim' " Tab rename
  Plug 'junegunn/vim-emoji'

  " Snippets
  Plug 'SirVer/ultisnips' " engine
  Plug 'honza/vim-snippets' " templates

  " micromanagement
  Plug 'ActivityWatch/aw-watcher-vim'

  "
  " Colors schemes
  "
  "Plug 'KeitaNakamura/neodark.vim'
  Plug 'dracula/vim'
  "Plug 'joshdick/onedark.vim'
  "Plug 'rakr/vim-one'
call plug#end()

"
" Import configs
"
for f in split(glob('~/.vim/config/*.vim'), '\n')
  exe 'source' f
endfor

filetype plugin indent on " required

"
" Set git editor
"
if has('nvim')
  let $GIT_EDITOR = 'nvr -cc split --remote-wait'
endif
autocmd FileType gitcommit,gitrebase,gitconfig set bufhidden=delete


"
" Swap
" "

" Set swp directories
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//
set undodir=~/.vim/undo//

set writebackup " protect against crash-during-write
set nobackup " but do not persist backup after successful write
set backupcopy=auto " use rename-and-write-new method whenever safe

"
" Other stuff
"

set mouse=n

" Set line numbers
set ruler
set number

" Tab to spaces
set expandtab
set tabstop=2

set backspace=indent,eol,start " Fix backspace

set spell spelllang=en_us,es_es " Spell checking

" Indentation
set shiftwidth=2
set autoindent
set smartindent

set hlsearch " Enable highlight when searching

set shiftround " Shift to the next round tab stop.
set shiftwidth=2 " Set auto indent spacing.

" folding
set foldmethod=syntax
set foldlevelstart=20

"autocmd FileType,BufLeave gitcommit :autocmd! TermOpen * startinsert
"autocmd BufLeave gitcommit startinsert
autocmd BufDelete gitcommit startinsert

" enter and leave terminal mode (insert mode) when switching between buffers
"autocmd BufWinEnter,WinEnter term://* startinsert
"autocmd BufLeave term://* stopinsert

"syntax on
