set nocompatible              " be iMproved, required
filetype off                  " required

" Remap leader key
let mapleader = ','

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  " alternatively, pass a path where Vundle should install plugins
  "call vundle#begin('~/some/path/here')

  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim'

  " The following are examples of different formats supported.
  " Keep Plugin commands between vundle#begin/end.
  " plugin on GitHub repo
  Plugin 'tpope/vim-fugitive'
  " plugin from http://vim-scripts.org/vim/scripts.html
  " Plugin 'L9'
  " Git plugin not hosted on GitHub
  Plugin 'git://git.wincent.com/command-t.git'
  " git repos on your local machine (i.e. when working on your own plugin)
  " Plugin 'file:///home/gmarik/path/to/plugin'
  " The sparkup vim script is in a subdirectory of this repo called vim.
  " Pass the path to set the runtimepath properly.
  Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
  " Install L9 and avoid a Naming conflict if you've already installed a
  " different version somewhere else.
  " Plugin 'ascenator/L9', {'name': 'newL9'}

  " All of your Plugins must be added before the following line

  " Show trailing whitespace and spaces before a tab:
  Plugin 'ntpeters/vim-better-whitespace'

  " Autocomplete
  Plugin 'Valloric/YouCompleteMe'

  " Enable syntax color
  Plugin 'sheerun/vim-polyglot'

  " Elixir
  Plugin 'slashmili/alchemist.vim'
  Plugin 'elixir-editors/vim-elixir'
  "Plugin 'vim-erlang/vim-erlang-runtime'
  Plugin 'mhinz/vim-mix-format', {'merged': 0}
  Plugin 'mattreduce/vim-mix.git'
  " Autoclose
  "Plugin 'tpope/vim-endwise'
  "Plugin 'jiangmiao/auto-pairs'

  " Comments
  Plugin 'scrooloose/nerdcommenter'

  " NERDtree plugins
  Plugin 'scrooloose/nerdtree'
  Plugin 'Xuyuanp/nerdtree-git-plugin'

  " Linting
  "Plugin 'w0rp/ale'
  "Plugin 'airblade/vim-gitgutter'

  " status tab
  Plugin 'vim-airline/vim-airline'
  Plugin 'vim-airline/vim-airline-themes'

  " Colorscheme
  Plugin 'dracula/vim'

  " Markdown
  Plugin 'godlygeek/tabular'
  Plugin 'plasticboy/vim-markdown'
  Plugin 'junegunn/vim-easy-align'
  Plugin 'JamshedVesuna/vim-markdown-preview'
  " auto toc
  Plugin 'mzlogin/vim-markdown-toc'

  Plugin 'terryma/vim-multiple-cursors'

  Plugin 'pearofducks/ansible-vim'

  Plugin 'dkprice/vim-easygrep'

  " Remove highlight when move the cursor after a search
  Plugin 'romainl/vim-cool'
call vundle#end()            " required

filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

map <leader>/ <plug>NERDCommenterToggle
nmap ,rf :NERDTreeFind<CR>

let g:mix_format_on_save = 1
let g:mix_format_silent_errors = 1

" Set swp directories
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//
set undodir=~/.vim/undo//

" Set line numbers
set ruler
set number

" Tab to spaces
set expandtab
set tabstop=2

" Fix backspace
set backspace=indent,eol,start

" Removes trailing spaces
function TrimWhiteSpace()
  %s/\s*$//
  ''
endfunction

set list listchars=trail:.,extends:>
autocmd FileWritePre * call TrimWhiteSpace()
autocmd FileAppendPre * call TrimWhiteSpace()
autocmd FilterWritePre * call TrimWhiteSpace()
autocmd BufWritePre * call TrimWhiteSpace()

" Copy to clipboard
" set clipboard=unnamed

" Custom plugins

" nerdtree
map <C-o> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeQuitOnOpen = 0
" Auto open NERDTree
autocmd vimenter * if !argc() | NERDTree | endif
"Auto close NERDTree if the latest buffer is the file tree
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" NERDTree file icons and color syntax
"Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'

" Icons
"Plugin 'ryanoasis/vim-devicons'
" To fix wrong padding
"let g:WebDevIconsNerdTreeBeforeGlyphPadding = ""
"let g:WebDevIconsUnicodeDecorateFolderNodes = v:true
"set encoding=UTF-8

" fzf
"set rtp+=~/.fzf
"Plugin 'junegunn/fzf.vim'

Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'

" lint
let g:ale_sign_column_always = 1
let g:ale_set_balloons = 1
let g:ale_list_window_size = 5
let g:airline#extensions#ale#enabled = 1

" git line changes
" Warning, high update frequency might cause vim to get extremely slow when
" typing
"set updatetime=100

" Color scheme
"Plugin 'joshdick/onedark.vim'
"colorscheme onedark

" https://github.com/dracula/vim/issues/81
let g:dracula_italic = 0
colorscheme dracula

"Bundle 'sonph/onehalf', {'rtp': 'vim/'}
"colorscheme onehalfdark
"let g:airline_theme='onehalfdark'

set background=dark
highlight Normal ctermbg=NONE
highlight nonText ctermbg=NONE

" Markdown
let g:vim_markdown_folding_disabled = 1
nmap ga <Plug>(EasyAlign)
xmap ga <Plug>(EasyAlign)
let vim_markdown_preview_github=1

" Spell checking
set spell spelllang=en_us,es_es

" Open HTML in browser
nnoremap <C-p> :!open -a Safari %<CR><CR>

" Indentation
set shiftwidth=2
set autoindent
set smartindent

" Tab key to switch windows
set autochdir
map <Tab> <C-W>W:cd %:p:h<CR>:<CR>

" Delete text without yank
vnoremap <leader>D "_D
vnoremap <leader>dd "_dd
vnoremap <leader>y "*y
vnoremap <leader>yy "*yy
vnoremap <leader>Y "*Y

" Search and replace word under cursor
nnoremap <Leader>s :%s/\<<C-r><C-w>\>/
"vnoremap <Leader>s :%s/\<<C-r><C-w>\>/
nnoremap <Leader>BS :1,.s/\<<C-r><C-w>\>/
nnoremap <Leader>S :.,$s/\<<C-r><C-w>\>/

" Enable highligt when searching
set hlsearch

" Empty lines without insert mode
nnoremap o o<Esc>
nnoremap O O<Esc>

" Remap arrow keys to change between buffers
noremap <C-S-Up> <C-w>k
noremap <C-S-Down> <C-w>j
noremap <C-S-Left> <C-w>h
noremap <C-S-Right> <C-w>l

" Disable ycm
let g:loaded_youcompleteme = 0

nnoremap <silent> <Leader>9 :exe "vertical resize " . (winwidth(0) * 10/9)<CR>
noremap <silent> <Leader>0 :exe "vertical resize " . (winwidth(0) * 9/10)<CR>

" fzf
nnoremap <silent> <leader>. :Ag<CR>
" Colision with NERDCommenter mapping
" nnoremap <silent> <leader>/ :execute 'Ag ' . input(':Ag ')<CR>

" Column width indicator
set colorcolumn=99
highlight ColorColumn ctermbg=lightred guibg=lightred

syntax on
