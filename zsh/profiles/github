# Deploys selected branch. The current path needs to be a git project
# See https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event
function gat() {
  OWNER=${1:-qgadrian}
  WORKFLOW_ID=${2:-manual_staging_deploy.yml}
  RELEASE_NAME=${3:-$(branchname)}

  CURRENT_PATH_PROJECT=$(git remote get-url origin | xargs basename -s .git)
  URL=https://api.github.com/repos/$OWNER/$CURRENT_PATH_PROJECT/actions/workflows/$WORKFLOW_ID/dispatches

  echo "Trigger action for repo $PROJECT"
  echo $URL

  git branch --sort=-committerdate -l | peco | sed 's/\* //g' | xargs -I{} curl \
      -X POST \
      -H "Authorization: token $GITHUB_ACTIONS_TOKEN" \
      -H "Accept: application/vnd.github.v3+json" \
      $URL \
      -d '{"ref":"{}","inputs":{"release_name":$RELEASE_NAME}}' \
}

function branchname() {
  DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
  BRANCH_PREFIX=$(git branch --show | sed 's/-.*//g' | tr a-z A-Z)

  if [ "$BRANCH_PREFIX" = "NOISSUE" ]; then
    PR_APPEND="[$BRANCH_PREFIX]"
  else
    PR_APPEND="[FM-$BRANCH_PREFIX]"
  fi

  PR_NAME=$(git cherry $DEFAULT_BRANCH -v --abbrev=1 | head -n 1 | sed "s/\+ [a-zA-Z0-9]* /$PR_APPEND /g")

  echo $PR_NAME
}

# List the projects of the authenticated user
gar() {
  curl \
    -s \
    -X GET \
    -H "Authorization: token $GITHUB_ACTIONS_TOKEN" \
    -H "Accept: application/vnd.github.nebula-preview+json" \
    "https://api.github.com/user/repos?sort=created" \
    | jq -r '.[].name'
}

# Deploys default branch on the selected project (slow)
gart () {
  gar | peco | xargs -I{} curl \
      -X POST \
      -H "Authorization: token $GITHUB_ACTIONS_TOKEN" \
      -H "Accept: application/vnd.github.v3+json" \
      https://api.github.com/repos/$GITHUB_USER/{}/dispatches \
      -d '{"event_type":"requested"}'

  echo "Triggered action on GitHub"
}

# Actions
alias ghrl="gh run list --limit 5"
alias ghrlw="gh run watch -i3 && terminal-notifier -message 'GitHub run is done'"
